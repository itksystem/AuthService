const db = require('openfsm-database-connection-producer');
const { UserPermissionsDTO, RoleDTO, PermissionDTO } = require('openfsm-permissions-dto');
const { UserDTO } = require('openfsm-user-dto');
const common      = require('openfsm-common-auth-services');  /* Библиотека с общими параметрами для Auth*/
const crypto      = require('crypto');
const logger      = require('openfsm-logger-handler');
const ClientProducerAMQP  =  require('openfsm-client-producer-amqp'); // ходим в почту через шину
require('dotenv').config();


exports.findByEmail = async (email) => {
  if (!email || email.trim() === '') {
    throw new Error('Email обязателен для поиска пользователя.');
  }

  try {
    // Выполнение SQL-запроса с использованием promise
    const result = await new Promise((resolve, reject) => {
      db.query(common.SQL.USER.FIND_BY_EMAIL, [email], (err, result) => {
        if (err) {
          console.log(err);
          logger.error('Ошибка выполнения SQL-запроса:', err);
          return reject(err);
        }
        resolve(result.rows[0]);
      });
    });

    // Если пользователь не найден, возвращаем null
    if (!result) {
      logger.info(`Пользователь с email ${email} не найден.`);
      return null;
    }
    // Создаем и возвращаем экземпляр UserDTO
     return new UserDTO(result);
  } catch (error) {
    console.log(error);
    logger.error('Ошибка при поиске пользователя по email:', error);
    throw error;
  }
};

